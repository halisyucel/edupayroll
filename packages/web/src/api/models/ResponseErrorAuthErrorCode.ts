// @ts-nocheck

/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ResponseErrorAuthErrorCode
 */
export interface ResponseErrorAuthErrorCode {
    /**
     * 
     * @type {string}
     * @memberof ResponseErrorAuthErrorCode
     */
    code: ResponseErrorAuthErrorCodeCodeEnum;
    /**
     * 
     * @type {string}
     * @memberof ResponseErrorAuthErrorCode
     */
    message?: string;
}


/**
 * @export
 */
export const ResponseErrorAuthErrorCodeCodeEnum = {
    UserNotFound: 'USER_NOT_FOUND',
    InvalidCredentials: 'INVALID_CREDENTIALS',
    UserAlreadyRegistered: 'USER_ALREADY_REGISTERED'
} as const;
export type ResponseErrorAuthErrorCodeCodeEnum = typeof ResponseErrorAuthErrorCodeCodeEnum[keyof typeof ResponseErrorAuthErrorCodeCodeEnum];


/**
 * Check if a given object implements the ResponseErrorAuthErrorCode interface.
 */
export function instanceOfResponseErrorAuthErrorCode(value: object): value is ResponseErrorAuthErrorCode {
    if (!('code' in value) || value['code'] === undefined) return false;
    return true;
}

export function ResponseErrorAuthErrorCodeFromJSON(json: any): ResponseErrorAuthErrorCode {
    return ResponseErrorAuthErrorCodeFromJSONTyped(json, false);
}

export function ResponseErrorAuthErrorCodeFromJSONTyped(json: any, ignoreDiscriminator: boolean): ResponseErrorAuthErrorCode {
    if (json == null) {
        return json;
    }
    return {
        
        'code': json['code'],
        'message': json['message'] == null ? undefined : json['message'],
    };
}

export function ResponseErrorAuthErrorCodeToJSON(value?: ResponseErrorAuthErrorCode | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'code': value['code'],
        'message': value['message'],
    };
}

